name: CI
on:
  push:
    branches-ignore:
      - 'dependabot/**'
    paths-ignore:
      - '.github/workflows/pages.yaml'
  pull_request:

permissions:
  contents: read

jobs:
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Fetch submodule upstream
        run: git submodule update --init --depth 1 blackbox-sys/upstream
      - name: Fetch no_std target
        run: rustup target add thumbv7em-none-eabihf
      - name: Build xtasks
        run: cargo build --package xtask
      - name: Clippy (workspace)
        run: cargo ci check --workspace
      - name: Clippy (none)
        run: cargo ci check -- --package blackbox-log --target thumbv7em-none-eabihf --no-default-features
      - name: Clippy (std only)
        run: cargo ci check -- --package blackbox-log --no-default-features --features std
      - name: Clippy (serde only)
        run: cargo ci check -- --package blackbox-log --target thumbv7em-none-eabihf --no-default-features --features serde
      - name: Clippy (all)
        run: cargo ci check -- --package blackbox-log --all-features

  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        toolchain:
          - msrv
          - beta
          - nightly
        include:
          - os: ubuntu-latest
            toolchain: msrv
            coverage: true
          - os: macos-latest
            toolchain: msrv
          - os: windows-latest
            toolchain: msrv

    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.toolchain == 'nightly' }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Remove rust-toolchain file if not testing MSRV
        run: rm rust-toolchain*
        if: ${{ matrix.toolchain != 'msrv' }}

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}

      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - name: Install llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
        if: ${{ matrix.coverage }}

      - name: Build xtasks
        run: cargo build --package xtask

      - name: Replace symlinks with copies
        if: ${{ runner.os == 'windows' }}
        run: |
          cd blackbox-log/tests/logs
          mv fc-blackbox fc-blackbox~
          mv gimbal-ghost gimbal-ghost~
          cp -r "$(readlink fc-blackbox~)" fc-blackbox
          cp -r "$(readlink gimbal-ghost~)" gimbal-ghost
          rm -r fc-blackbox~
          rm -r gimbal-ghost~

      - name: Run tests
        run: cargo ci test
      
      - name: Run doctests
        run: cargo test --doc

      - name: Generate coverage
        run: cargo ci test --coverage
        if: ${{ matrix.coverage }}

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        if: ${{ matrix.coverage }}
        with:
          files: coverage.lcov

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: rm rust-toolchain*
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
      - name: Check rustfmt
        run: cargo +nightly fmt --all --check

  typos:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: crate-ci/typos@master
